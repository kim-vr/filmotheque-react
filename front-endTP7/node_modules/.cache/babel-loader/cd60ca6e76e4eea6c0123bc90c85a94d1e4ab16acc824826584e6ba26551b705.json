{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimvr\\\\OneDrive\\\\Documents\\\\IUT\\\\Semestre 4\\\\R4.10\\\\filmotheque\\\\front-endTP7\\\\src\\\\components\\\\GenreList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ContentBox from './ContentBox';\nimport { useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenreList = () => {\n  _s();\n  const genres = useLoaderData();\n  const [genre, setGenre] = useState([]); // 1. Initialisez genre avec un tableau vide\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(`http://filmotheque.e-mingo.net/api/catalog/movie/${genre}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [genre]); // 2. Ajoutez genre à la liste de dépendances de useEffect\n\n  console.log(movies);\n  return genres.map((genreItem, index) =>\n  /*#__PURE__*/\n  // 3. Ajoutez une clé unique pour chaque élément\n  _jsxDEV(ContentBox, {\n    title: genreItem,\n    movies: movies.filter(movie => movie.genre === genreItem),\n    setGenre: setGenre\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 6\n  }, this) // Filtrer les films par genre\n  );\n};\n_s(GenreList, \"t1ws3U5LBEU4hJJM27O3kwii+wY=\", false, function () {\n  return [useLoaderData];\n});\n_c = GenreList;\nexport default GenreList;\nvar _c;\n$RefreshReg$(_c, \"GenreList\");","map":{"version":3,"names":["React","useEffect","useState","ContentBox","useLoaderData","jsxDEV","_jsxDEV","GenreList","_s","genres","genre","setGenre","loading","setLoading","error","setError","fetchMovies","response","fetch","ok","Error","data","json","setMovies","message","console","log","movies","map","genreItem","index","title","filter","movie","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kimvr/OneDrive/Documents/IUT/Semestre 4/R4.10/filmotheque/front-endTP7/src/components/GenreList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ContentBox from './ContentBox';\r\nimport { useLoaderData } from 'react-router-dom';\r\n\r\nconst GenreList = () => {\r\n  const genres = useLoaderData();\r\n  const [genre, setGenre] = useState([]); // 1. Initialisez genre avec un tableau vide\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetch(`http://filmotheque.e-mingo.net/api/catalog/movie/${genre}`);\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setMovies(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, [genre]); // 2. Ajoutez genre à la liste de dépendances de useEffect\r\n\r\n  console.log(movies);\r\n  return(\r\n    genres.map((genreItem, index) => ( // 3. Ajoutez une clé unique pour chaque élément\r\n     <ContentBox key={index} title={genreItem} movies={movies.filter(movie => movie.genre === genreItem)} setGenre={setGenre}/> // Filtrer les films par genre\r\n    ))\r\n  )\r\n};\r\n\r\nexport default GenreList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,MAAM,GAAGL,aAAa,CAAC,CAAC;EAC9B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oDAAmDR,KAAM,EAAC,CAAC;QACzF,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCC,SAAS,CAACF,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;MACzB,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEbe,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;EACnB,OACElB,MAAM,CAACmB,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK;EAAA;EAAO;EAClCxB,OAAA,CAACH,UAAU;IAAa4B,KAAK,EAAEF,SAAU;IAACF,MAAM,EAAEA,MAAM,CAACK,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACvB,KAAK,KAAKmB,SAAS,CAAE;IAAClB,QAAQ,EAAEA;EAAS,GAAvGmB,KAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAmG,CAAC,CAAC;EAC3H,CAAC;AAEN,CAAC;AAAC7B,EAAA,CA/BID,SAAS;EAAA,QACEH,aAAa;AAAA;AAAAkC,EAAA,GADxB/B,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}